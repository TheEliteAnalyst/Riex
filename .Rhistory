## Keep your secret token safe. Your secret token can make any API call on behalf of your account, including changes that may impact billing such as enabling pay-as-you-go charges
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
x <- "TSLA"
TSLA_Co <- iex.company(x, sk)
View(TSLA_Co)
#Load Riex Package
library(Riex)
# iex.company(x, iex_sk) requires 2 values
# x : A valid IEX Stock Symbol
# iex_sk : IEX Cloud API Scret Key. It is availabe to use via Accunt Console
## Keep your secret token safe. Your secret token can make any API call on behalf of your account, including changes that may impact billing such as enabling pay-as-you-go charges
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
x <- "TSLA"
TSLA_Co <- iex.company(x, sk)
print(TSLA_Co)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
tools
crypto.df <- data.frame()
url_prefix <- "https://api.iextrading.com/1.0"
url = paste0(url_prefix, "/stock/market/crypto")
req <- httr::GET(url)
req_status <- req$status_code
if (req_status != 200) {
stop ("Connection Failed to IEX API")
} else {
url.info <- httr::GET(url)
url.content <- content(url.info, as = "text", encoding = "UTF-8")
}
if (identical(text, "")) warning("No output to parse.") else crypto <- rjson::fromJSON(url.content)
crypto.df <- do.call(rbind, crypto) %>%
as.data.frame
return(crypto.df)
crypto.df <- data.frame()
url_prefix <- "https://api.iextrading.com/1.0"
url = paste0(url_prefix, "/stock/market/crypto")
req <- httr::GET(url)
url.info <- httr::GET(url)
url.content <- content(url.info, as = "text", encoding = "UTF-8")
}
if
if (identical(text, "")) warning("No output to parse.") else crypto <- rjson::fromJSON(url.content)
if (identical(text, "")) warning("No output to parse.") else crypto <- rjson::fromJSON(url.content)
crypto.df <- do.call(rbind, crypto) %>%
as.data.frame
if (identical(text, "")) warning("No output to parse.") else crypto <- rjson::fromJSON(url.content)
crypto.df <- do.call(rbind, crypto) %>%
as.data.frame
url.content <- content(url.info, as = "text", encoding = "UTF-8")
url.info <- httr::GET(url)
library(rjson)
library(tidyverse)
library(stringr)
library(urtools)
library(dplyr)
url.info <- httr::GET(url)
url.content <- content(url.info, as = "text", encoding = "UTF-8")
library(utils)
url.content <- content(url.info, as = "text", encoding = "UTF-8")
library(httr)
url.content <- content(url.info, as = "text", encoding = "UTF-8")
if (identical(text, "")) warning("No output to parse.") else crypto <- rjson::fromJSON(url.content)
crypto.df <- do.call(rbind, crypto) %>%
as.data.frame
View(crypto.df)
crypto_symbols <- crypto.df['symbol']
crypto_symbols
getwd()
write.csv(crypto_symbols, file = "crypto_symbols.csv")
read.csv("crypto_symbols.txt")
devtools::use_data(crypto_symbols, Riex)
usethis::use_data(crypto_symbols, Riex)
usethis::use_data(crypto_symbols, Riex, overwrite = TRUE)
save(crypto_symbols, file="data/crypto_symbols.RData")
load("~/R/Riex/data/crypto_symbols.rda")
View(crypto_symbols)
str(crypto_symbols)
getwd()
for (f in list.files("C:/Users/Myriam/Documents/R/Riex/R", full.names=TRUE)) parse(f)
f <- "some file with unbalanced braces"
load("~/R/Riex/data/crypto_symbols.rda")
View(crypto_symbols)
library(Riex)
data()
data(Riex)
library(Riex)
data("crypto_symbols")
View(data("crypto_symbols"))
load(crypto_symbols)
crypto_symbols
library(Riex)
crypto_symbols
library(Riex)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
print(crypto_symbols)
crypto_symbols
c <- crypto_symbols
c
View(c)
Vie(crypto_symbols)
View(crypto_symbols)
Bitcoin <- crypto("BTCUSDT")
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
Bitcoin <- crypto("BTCUSDT")
Bitcoin <- crypto("BTCUSDT", iex_sk = sk)
library(Riex)
Bitcoin <- crypto("BTCUSDT", sk)
Bitcoin <- crypto(x="BTCUSDT", sk)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
library(Riex)
x <- "TSLA"
r <- "1y"
Bitcoin <- crypto(x="BTCUSDT", sk)
x <- "TSLA"
TSLA_Co <- iex.company(x, sk)
TSLA_Co
Bitcoin <- crypto("BTCUSDT",sk)
b <- "BTCUSDT"
Bitcoin <- crypto(b,sk)
Bitcoin <- crypto(x="BTCUSDT", sk)
Bitcoin <- crypto("BTCUSDT", "sk_8ad348ad64414ddf8874dfc8752a0b22")
library(Riex)
View(crypto_symbols)
crypto("BTCUSDT", "sk_8ad348ad64414ddf8874dfc8752a0b22")
x <- "BTCUSDT"
sk  <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
crypto(s,sk)
crypto(x,sk)
crypto.df <- data.frame()
x_encoded <- url_encode(paste(toupper(x), collapse=", "))
library(utils)
x_encoded <- url_encode(paste(toupper(x), collapse=", "))
library(httr)
x_encoded <- url_encode(paste(toupper(x), collapse=", "))
logo("GM", SK)
logo("GM", sk)
library(Riex)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TSLA_Logo <- logo (x, sk)
x <- "TSLA"
TSLA_Logo <- logo (x, sk)
TSLA_Logo
download.file(TSLA_Logo,"TSLA.png",mode="wb")
library(imager)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
x <- "TSLA"
r <- "1y"
View(crypto_symbols)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
TSLA_Logo <- logo (x, sk)
TSLA_Logo
download.file(TSLA_Logo,"TSLA.png",mode="wb")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
x <- "TSLA"
r <- "1y"
View(crypto_symbols)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
TSLA_Logo <- logo (x, sk)
TSLA_Logo
download.file(TSLA_Logo,"TSLA.png",mode="wb")
``` {r logo, echo=TRUE}
library(quantmod)
library(Riex)
iex.financials.annual("TSLA", sk)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.financials.annual("TSLA", sk)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
Bitcoin <- crypto("BTCUSDT", sk)
```{r, fig.show='hold'}
plot(barChart(TSLA))
```
When possible, results from functions matches OHLC standards for `quantomd` package to leverage its capabilities. Future enhancements to `Riex` will geared toward enabling comprehensive Finacial Analysis & Modeling
library(Riex)
iex.account("sk_8ad348ad64414ddf8874dfc8752a0b22")
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.account(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.account(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.account(sk)
iex.financials("TSLA", "annual", sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.cash.flow()
iex.cash.flow("TSLA", sk)
t <- iex.cash.flow("TSLA", sk)
str(t)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.cash.flow("TSLA", sk)
t <- iex.cash.flow("TSLA", sk)
str(t)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.cash.flow()
t <- iex.cash.flow("TSLA", sk)
str(t)
View(t)
library(Riex)
library(Riex)
library(Riex)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
x <- "TSLA"
r <- "6m"
TSLA <- iex.chart(x, r, sk)
library(quantmod)
iex.stats("TSLA", sk)
Bitcoin <- crypto("BTCUSDT", sk)
Bitcoin
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
x <- "TSLA"
r <- "6m"
library(Riex)
library(Riex)
x <- "TSLA"
r <- "6m"
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
TSLA <- iex.chart(x, r, sk)
iex.chart("TSLA", "6m", sk)
library(Riex)
iex.chart("TSLA", "6m", "sk_8ad348ad64414ddf8874dfc8752a0b22")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TSLA <- iex.chart(x, r, sk)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
x <- "TSLA"
r <- "6m"
TSLA <- iex.chart(x, r, sk)
library(quantmod)
barChart(TSLA)
library(Riex)
library(Riex)
iex.most.active()
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.most.active(sk)
library(Riex)
library(quantmod)
names(quantmod:::.chart.theme)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
TSLA <- iex.chart("TSLA", "9m", sk)
TSLA <- iex.chart("TSLA", "9m", "sk_8ad348ad64414ddf8874dfc8752a0b22")
TSLA <- iex.chart("TSLA", "6m", "sk_8ad348ad64414ddf8874dfc8752a0b22")
barChart(TSLA, theme="white")
t <- iex.stats("TSLA", sk)
str(t)
t
iex.account(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.account(sk)
library(riex)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.account(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.usage(sk)
w <- iex.usage(sk)
str(w)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.usage.details(sk)
iex.account()
iex.account(sk)
iex.usage(sk)
library(Riex)
sk <- sk_8ad348ad64414ddf8874dfc8752a0b22
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.usage.details(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.usage.details(sk)
iex.usage(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.usage(sk)
iex.account(sk)
iex.usage.details(sk)
iex.usage.details.df <- data.frame()
url = "https://cloud.iexapis.com/stable//account/usage?token=sk_8ad348ad64414ddf8874dfc8752a0b22"
library(httr)
req <- httr::GET(url)
url.info <- httr::GET(url)
url.content <- content(url.info, as = "text", encoding = "UTF-8")
url.content$messages
str(url.content)
if (identical(text, "")) warning("No output to parse.") else iex_usage_details <- rjson::fromJSON(url.content)
iex.usage.details.df
url.info <- httr::GET(url)
url.content <- content(url.info, as = "text", encoding = "UTF-8")
if (identical(text, "")) warning("No output to parse.") else iex_usage_details <- rjson::fromJSON(url.content)
iex.usage.details.df
iex.usage(sk)
iex.account(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.account(sk)
iex.usage(sk)
t <- iex.usage(sk)
t$Field
t$dailyUsage
t$monthlyUsage
t$monthlyPayAsYouGo
t$tokenUsage
t$keyUsage
str(t)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
w <- iex.usage.details(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.usage.details(sk)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
library(Riex)
sk<-"sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.usage.details(sk)
t <- iex.usage.details(sk)
str(t)
t$keyUsage
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.key.usage(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.key.usage(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.key.usage(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.key.usage(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.key.usage(sk)
sk<-"sk_8ad348ad64414ddf8874dfc8752a0b22"
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.key.usage(sk)
t <- iex.key.usage(sk)
str(t)
library(Riex)
libta
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.account(sk)
iex.usage(sk)
library(Riex)
sk  <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
t <- iex.key.usage(sk)
iex.daily.usage(sk)
iex.monthly.usage(sk)
iex.key.usage(sk)
t <- iex.key.usage(sk)
l <- iex.key.usage(sk)
l
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.daily.usage(sk)
iex.monthly.usage(sk)
t <- iex.monthly.usage(sk)
str(t)
iex.usage(sk)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
iex.account(sk)
iex.daily.usage(sk)
iex.monthly.usage(sk)
iex.usage(sk)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
devtools::release()
check_rhub()
devtools::check_rhub()
library(Riex)
devtools:::cran_comments()
use_cran_comments()
devtools::use_cran_comments()
usethis::use_cran_comments()
devtools::submit_cran()
devtools::build_win()
library(Riex)
data("Riex")
ata(package = "Riex")
data(package = "Riex")
rytoSymbols <- crypto_symbols
CrytoSymbols <- crypto_symbols
CyptoSymbols
CrytoSymbols
str(CrytoSymbols)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
sk <- "sk_8ad348ad64414ddf8874dfc8752a0b22"
x <- "gm"
iex.account(sk)
iex.daily.usage(sk)
iex.monthly.usage(sk)
iex.balance.sheet(x, sk)
library(quantmod)
iex.balance.sheet(x, sk)
iex.chart(x, "6m", sk)
gm <- iex.chart(x, "6m", sk)
barChart(gm)
iex.balance.sheet(x, sk)
iex.cash.flow(gm)
iex.cash.flow(x, sk)
iex.company(x, sk)
iex.stats(x, sk)
iex.stats(x,sk)
iex.most.active(sk)
library(Riex)
library(Riex)
library(Riex)
devtools::submit_cran()
library(Riex)
library(Riex)
library(Riex)
devtools::submit_cran()
library(Riex)
library(Riex)
library(Riex)
devtools::submit_cran()
library(Riex)
file.exists("~/.ssh/id_rsa.pub")
library(Riex)
devtools::use_build_ignore("NEWS.md")
usethis::use_build_ignore("NEWS.md")
usethis::use_build_ignore("NEWS.md")
use_NEWS()
use_news_md()
usethis::use_news_md()
usethis::use_news_md()
usethis::use_news_md()
library(Riex)
library(Riex)
library(Riex)
library(Riex)
library(Riex)
sk <- "sk_d3bef90c38e64133a37c7fcc8385dc46"
x <- "gm"
r <- "1y"
iex.chart(x,r,sk)
iex.account(sk)
getwd()
library(Riex)
getwd()
devtools::submit_cran()
